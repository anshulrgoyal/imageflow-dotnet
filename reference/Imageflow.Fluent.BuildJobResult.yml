### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.BuildJobResult
  commentId: T:Imageflow.Fluent.BuildJobResult
  id: BuildJobResult
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.BuildJobResult.EncodeResults
  - Imageflow.Fluent.BuildJobResult.First
  - Imageflow.Fluent.BuildJobResult.Item(System.Int32)
  - Imageflow.Fluent.BuildJobResult.PerformanceDetails
  - Imageflow.Fluent.BuildJobResult.TryGet(System.Int32)
  langs:
  - csharp
  - vb
  name: BuildJobResult
  nameWithType: BuildJobResult
  fullName: Imageflow.Fluent.BuildJobResult
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: BuildJobResult
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 9
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public class BuildJobResult
    content.vb: Public Class BuildJobResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.BuildJobResult.EncodeResults
  commentId: P:Imageflow.Fluent.BuildJobResult.EncodeResults
  id: EncodeResults
  parent: Imageflow.Fluent.BuildJobResult
  langs:
  - csharp
  - vb
  name: EncodeResults
  nameWithType: BuildJobResult.EncodeResults
  fullName: Imageflow.Fluent.BuildJobResult.EncodeResults
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: EncodeResults
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 16
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nA collection of the encoded images produced by the job\n"
  example: []
  syntax:
    content: public IReadOnlyCollection<BuildEncodeResult> EncodeResults { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyCollection{Imageflow.Fluent.BuildEncodeResult}
    content.vb: Public ReadOnly Property EncodeResults As IReadOnlyCollection(Of BuildEncodeResult)
  overload: Imageflow.Fluent.BuildJobResult.EncodeResults*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Imageflow.Fluent.BuildJobResult.PerformanceDetails
  commentId: P:Imageflow.Fluent.BuildJobResult.PerformanceDetails
  id: PerformanceDetails
  parent: Imageflow.Fluent.BuildJobResult
  langs:
  - csharp
  - vb
  name: PerformanceDetails
  nameWithType: BuildJobResult.PerformanceDetails
  fullName: Imageflow.Fluent.BuildJobResult.PerformanceDetails
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: PerformanceDetails
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 21
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nDetails about the runtime performance of the job\n"
  example: []
  syntax:
    content: public PerformanceDetails PerformanceDetails { get; }
    parameters: []
    return:
      type: Imageflow.Fluent.PerformanceDetails
    content.vb: Public ReadOnly Property PerformanceDetails As PerformanceDetails
  overload: Imageflow.Fluent.BuildJobResult.PerformanceDetails*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Imageflow.Fluent.BuildJobResult.First
  commentId: P:Imageflow.Fluent.BuildJobResult.First
  id: First
  parent: Imageflow.Fluent.BuildJobResult
  langs:
  - csharp
  - vb
  name: First
  nameWithType: BuildJobResult.First
  fullName: Imageflow.Fluent.BuildJobResult.First
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: First
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 26
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nThe first encoded image produced by the job (with the lowest io_id)\n"
  example: []
  syntax:
    content: public BuildEncodeResult First { get; }
    parameters: []
    return:
      type: Imageflow.Fluent.BuildEncodeResult
    content.vb: Public ReadOnly Property First As BuildEncodeResult
  overload: Imageflow.Fluent.BuildJobResult.First*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Imageflow.Fluent.BuildJobResult.Item(System.Int32)
  commentId: P:Imageflow.Fluent.BuildJobResult.Item(System.Int32)
  id: Item(System.Int32)
  parent: Imageflow.Fluent.BuildJobResult
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: BuildJobResult.Item[Int32]
  fullName: Imageflow.Fluent.BuildJobResult.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: this[]
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 28
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public BuildEncodeResult this[int ioId] { get; }
    parameters:
    - id: ioId
      type: System.Int32
    return:
      type: Imageflow.Fluent.BuildEncodeResult
    content.vb: Public ReadOnly Property Item(ioId As Integer) As BuildEncodeResult
  overload: Imageflow.Fluent.BuildJobResult.Item*
  nameWithType.vb: BuildJobResult.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Imageflow.Fluent.BuildJobResult.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Imageflow.Fluent.BuildJobResult.TryGet(System.Int32)
  commentId: M:Imageflow.Fluent.BuildJobResult.TryGet(System.Int32)
  id: TryGet(System.Int32)
  parent: Imageflow.Fluent.BuildJobResult
  langs:
  - csharp
  - vb
  name: TryGet(Int32)
  nameWithType: BuildJobResult.TryGet(Int32)
  fullName: Imageflow.Fluent.BuildJobResult.TryGet(System.Int32)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/BuildJobResult.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: TryGet
    path: src/Imageflow/Fluent/BuildJobResult.cs
    startLine: 35
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReturns null if the encode result by the given io_id doesn&apos;t exist. \n"
  example: []
  syntax:
    content: public BuildEncodeResult TryGet(int ioId)
    parameters:
    - id: ioId
      type: System.Int32
      description: ''
    return:
      type: Imageflow.Fluent.BuildEncodeResult
      description: ''
    content.vb: Public Function TryGet(ioId As Integer) As BuildEncodeResult
  overload: Imageflow.Fluent.BuildJobResult.TryGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.BuildJobResult.EncodeResults*
  commentId: Overload:Imageflow.Fluent.BuildJobResult.EncodeResults
  name: EncodeResults
  nameWithType: BuildJobResult.EncodeResults
  fullName: Imageflow.Fluent.BuildJobResult.EncodeResults
- uid: System.Collections.Generic.IReadOnlyCollection{Imageflow.Fluent.BuildEncodeResult}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{Imageflow.Fluent.BuildEncodeResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<BuildEncodeResult>
  nameWithType: IReadOnlyCollection<BuildEncodeResult>
  fullName: System.Collections.Generic.IReadOnlyCollection<Imageflow.Fluent.BuildEncodeResult>
  nameWithType.vb: IReadOnlyCollection(Of BuildEncodeResult)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of Imageflow.Fluent.BuildEncodeResult)
  name.vb: IReadOnlyCollection(Of BuildEncodeResult)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.BuildEncodeResult
    name: BuildEncodeResult
    nameWithType: BuildEncodeResult
    fullName: Imageflow.Fluent.BuildEncodeResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.BuildEncodeResult
    name: BuildEncodeResult
    nameWithType: BuildEncodeResult
    fullName: Imageflow.Fluent.BuildEncodeResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Imageflow.Fluent.BuildJobResult.PerformanceDetails*
  commentId: Overload:Imageflow.Fluent.BuildJobResult.PerformanceDetails
  name: PerformanceDetails
  nameWithType: BuildJobResult.PerformanceDetails
  fullName: Imageflow.Fluent.BuildJobResult.PerformanceDetails
- uid: Imageflow.Fluent.PerformanceDetails
  commentId: T:Imageflow.Fluent.PerformanceDetails
  parent: Imageflow.Fluent
  name: PerformanceDetails
  nameWithType: PerformanceDetails
  fullName: Imageflow.Fluent.PerformanceDetails
- uid: Imageflow.Fluent.BuildJobResult.First*
  commentId: Overload:Imageflow.Fluent.BuildJobResult.First
  name: First
  nameWithType: BuildJobResult.First
  fullName: Imageflow.Fluent.BuildJobResult.First
- uid: Imageflow.Fluent.BuildEncodeResult
  commentId: T:Imageflow.Fluent.BuildEncodeResult
  parent: Imageflow.Fluent
  name: BuildEncodeResult
  nameWithType: BuildEncodeResult
  fullName: Imageflow.Fluent.BuildEncodeResult
- uid: Imageflow.Fluent.BuildJobResult.Item*
  commentId: Overload:Imageflow.Fluent.BuildJobResult.Item
  name: Item
  nameWithType: BuildJobResult.Item
  fullName: Imageflow.Fluent.BuildJobResult.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Imageflow.Fluent.BuildJobResult.TryGet*
  commentId: Overload:Imageflow.Fluent.BuildJobResult.TryGet
  name: TryGet
  nameWithType: BuildJobResult.TryGet
  fullName: Imageflow.Fluent.BuildJobResult.TryGet
