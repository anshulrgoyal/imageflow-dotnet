### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.IOutputDestination
  commentId: T:Imageflow.Fluent.IOutputDestination
  id: IOutputDestination
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.IOutputDestination.FlushAsync(System.Threading.CancellationToken)
  - Imageflow.Fluent.IOutputDestination.RequestCapacityAsync(System.Int32)
  - Imageflow.Fluent.IOutputDestination.WriteAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IOutputDestination
  nameWithType: IOutputDestination
  fullName: Imageflow.Fluent.IOutputDestination
  type: Interface
  source:
    remote:
      path: src/Imageflow/Fluent/IOutputDestination.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: IOutputDestination
    path: src/Imageflow/Fluent/IOutputDestination.cs
    startLine: 8
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: 'public interface IOutputDestination : IDisposable'
    content.vb: >-
      Public Interface IOutputDestination
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - Imageflow.Fluent.IOutputDestination.Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Imageflow.Fluent.IOutputDestination.RequestCapacityAsync(System.Int32)
  commentId: M:Imageflow.Fluent.IOutputDestination.RequestCapacityAsync(System.Int32)
  id: RequestCapacityAsync(System.Int32)
  parent: Imageflow.Fluent.IOutputDestination
  langs:
  - csharp
  - vb
  name: RequestCapacityAsync(Int32)
  nameWithType: IOutputDestination.RequestCapacityAsync(Int32)
  fullName: Imageflow.Fluent.IOutputDestination.RequestCapacityAsync(System.Int32)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IOutputDestination.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: RequestCapacityAsync
    path: src/Imageflow/Fluent/IOutputDestination.cs
    startLine: 10
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: Task RequestCapacityAsync(int bytes)
    parameters:
    - id: bytes
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RequestCapacityAsync(bytes As Integer) As Task
  overload: Imageflow.Fluent.IOutputDestination.RequestCapacityAsync*
- uid: Imageflow.Fluent.IOutputDestination.WriteAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.IOutputDestination.WriteAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  id: WriteAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)
  parent: Imageflow.Fluent.IOutputDestination
  langs:
  - csharp
  - vb
  name: WriteAsync(ArraySegment<Byte>, CancellationToken)
  nameWithType: IOutputDestination.WriteAsync(ArraySegment<Byte>, CancellationToken)
  fullName: Imageflow.Fluent.IOutputDestination.WriteAsync(System.ArraySegment<System.Byte>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IOutputDestination.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: WriteAsync
    path: src/Imageflow/Fluent/IOutputDestination.cs
    startLine: 11
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: Task WriteAsync(ArraySegment<byte> bytes, CancellationToken cancellationToken)
    parameters:
    - id: bytes
      type: System.ArraySegment{System.Byte}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function WriteAsync(bytes As ArraySegment(Of Byte), cancellationToken As CancellationToken) As Task
  overload: Imageflow.Fluent.IOutputDestination.WriteAsync*
  nameWithType.vb: IOutputDestination.WriteAsync(ArraySegment(Of Byte), CancellationToken)
  fullName.vb: Imageflow.Fluent.IOutputDestination.WriteAsync(System.ArraySegment(Of System.Byte), System.Threading.CancellationToken)
  name.vb: WriteAsync(ArraySegment(Of Byte), CancellationToken)
- uid: Imageflow.Fluent.IOutputDestination.FlushAsync(System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.IOutputDestination.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: Imageflow.Fluent.IOutputDestination
  langs:
  - csharp
  - vb
  name: FlushAsync(CancellationToken)
  nameWithType: IOutputDestination.FlushAsync(CancellationToken)
  fullName: Imageflow.Fluent.IOutputDestination.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IOutputDestination.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: FlushAsync
    path: src/Imageflow/Fluent/IOutputDestination.cs
    startLine: 12
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: Task FlushAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function FlushAsync(cancellationToken As CancellationToken) As Task
  overload: Imageflow.Fluent.IOutputDestination.FlushAsync*
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.IOutputDestination.Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
  parent: Imageflow.Fluent.IOutputDestinationExtensions
  definition: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
  name: CopyFromStreamAsync(Stream, CancellationToken)
  nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync(Stream, CancellationToken)
  fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyFromStreamAsync
    nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync
    fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyFromStreamAsync
    nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync
    fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
  isExternal: true
  name: CopyFromStreamAsync(IOutputDestination, Stream, CancellationToken)
  nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync(IOutputDestination, Stream, CancellationToken)
  fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination, System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
    name: CopyFromStreamAsync
    nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync
    fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Imageflow.Fluent.IOutputDestination
    name: IOutputDestination
    nameWithType: IOutputDestination
    fullName: Imageflow.Fluent.IOutputDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync(Imageflow.Fluent.IOutputDestination,System.IO.Stream,System.Threading.CancellationToken)
    name: CopyFromStreamAsync
    nameWithType: IOutputDestinationExtensions.CopyFromStreamAsync
    fullName: Imageflow.Fluent.IOutputDestinationExtensions.CopyFromStreamAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Imageflow.Fluent.IOutputDestination
    name: IOutputDestination
    nameWithType: IOutputDestination
    fullName: Imageflow.Fluent.IOutputDestination
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.IOutputDestinationExtensions
  commentId: T:Imageflow.Fluent.IOutputDestinationExtensions
  parent: Imageflow.Fluent
  name: IOutputDestinationExtensions
  nameWithType: IOutputDestinationExtensions
  fullName: Imageflow.Fluent.IOutputDestinationExtensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.IOutputDestination.RequestCapacityAsync*
  commentId: Overload:Imageflow.Fluent.IOutputDestination.RequestCapacityAsync
  name: RequestCapacityAsync
  nameWithType: IOutputDestination.RequestCapacityAsync
  fullName: Imageflow.Fluent.IOutputDestination.RequestCapacityAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Imageflow.Fluent.IOutputDestination.WriteAsync*
  commentId: Overload:Imageflow.Fluent.IOutputDestination.WriteAsync
  name: WriteAsync
  nameWithType: IOutputDestination.WriteAsync
  fullName: Imageflow.Fluent.IOutputDestination.WriteAsync
- uid: System.ArraySegment{System.Byte}
  commentId: T:System.ArraySegment{System.Byte}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  nameWithType.vb: ArraySegment(Of Byte)
  fullName.vb: System.ArraySegment(Of System.Byte)
  name.vb: ArraySegment(Of Byte)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Imageflow.Fluent.IOutputDestination.FlushAsync*
  commentId: Overload:Imageflow.Fluent.IOutputDestination.FlushAsync
  name: FlushAsync
  nameWithType: IOutputDestination.FlushAsync
  fullName: Imageflow.Fluent.IOutputDestination.FlushAsync
