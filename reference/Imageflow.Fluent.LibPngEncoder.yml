### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.LibPngEncoder
  commentId: T:Imageflow.Fluent.LibPngEncoder
  id: LibPngEncoder
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.LibPngEncoder.BitDepth
  - Imageflow.Fluent.LibPngEncoder.Matte
  - Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic
  - Imageflow.Fluent.LibPngEncoder.ZlibCompression
  langs:
  - csharp
  - vb
  name: LibPngEncoder
  nameWithType: LibPngEncoder
  fullName: Imageflow.Fluent.LibPngEncoder
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: LibPngEncoder
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 23
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nUse LodePngEncoder instead\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use PngQuantEncoder or LodePngEncoder instead")]

      public class LibPngEncoder : IEncoderPreset
    content.vb: >-
      <Obsolete("Use PngQuantEncoder or LodePngEncoder instead")>

      Public Class LibPngEncoder
          Implements IEncoderPreset
  inheritance:
  - System.Object
  implements:
  - Imageflow.Fluent.IEncoderPreset
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use PngQuantEncoder or LodePngEncoder instead
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.LibPngEncoder.Matte
  commentId: P:Imageflow.Fluent.LibPngEncoder.Matte
  id: Matte
  parent: Imageflow.Fluent.LibPngEncoder
  langs:
  - csharp
  - vb
  name: Matte
  nameWithType: LibPngEncoder.Matte
  fullName: Imageflow.Fluent.LibPngEncoder.Matte
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Matte
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 26
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public AnyColor? Matte { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.AnyColor}
    content.vb: Public Property Matte As AnyColor?
  overload: Imageflow.Fluent.LibPngEncoder.Matte*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.LibPngEncoder.ZlibCompression
  commentId: P:Imageflow.Fluent.LibPngEncoder.ZlibCompression
  id: ZlibCompression
  parent: Imageflow.Fluent.LibPngEncoder
  langs:
  - csharp
  - vb
  name: ZlibCompression
  nameWithType: LibPngEncoder.ZlibCompression
  fullName: Imageflow.Fluent.LibPngEncoder.ZlibCompression
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ZlibCompression
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 27
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public int? ZlibCompression { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ZlibCompression As Integer?
  overload: Imageflow.Fluent.LibPngEncoder.ZlibCompression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.LibPngEncoder.BitDepth
  commentId: P:Imageflow.Fluent.LibPngEncoder.BitDepth
  id: BitDepth
  parent: Imageflow.Fluent.LibPngEncoder
  langs:
  - csharp
  - vb
  name: BitDepth
  nameWithType: LibPngEncoder.BitDepth
  fullName: Imageflow.Fluent.LibPngEncoder.BitDepth
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: BitDepth
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 28
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public PngBitDepth? BitDepth { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.PngBitDepth}
    content.vb: Public Property BitDepth As PngBitDepth?
  overload: Imageflow.Fluent.LibPngEncoder.BitDepth*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic
  id: ToImageflowDynamic
  parent: Imageflow.Fluent.LibPngEncoder
  langs:
  - csharp
  - vb
  name: ToImageflowDynamic()
  nameWithType: LibPngEncoder.ToImageflowDynamic()
  fullName: Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ToImageflowDynamic
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 29
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public object ToImageflowDynamic()
    return:
      type: System.Object
    content.vb: Public Function ToImageflowDynamic As Object
  overload: Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic*
  implements:
  - Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Imageflow.Fluent.IEncoderPreset
  commentId: T:Imageflow.Fluent.IEncoderPreset
  parent: Imageflow.Fluent
  name: IEncoderPreset
  nameWithType: IEncoderPreset
  fullName: Imageflow.Fluent.IEncoderPreset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.LibPngEncoder.Matte*
  commentId: Overload:Imageflow.Fluent.LibPngEncoder.Matte
  name: Matte
  nameWithType: LibPngEncoder.Matte
  fullName: Imageflow.Fluent.LibPngEncoder.Matte
- uid: System.Nullable{Imageflow.Fluent.AnyColor}
  commentId: T:System.Nullable{Imageflow.Fluent.AnyColor}
  parent: System
  definition: System.Nullable`1
  name: Nullable<AnyColor>
  nameWithType: Nullable<AnyColor>
  fullName: System.Nullable<Imageflow.Fluent.AnyColor>
  nameWithType.vb: Nullable(Of AnyColor)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.AnyColor)
  name.vb: Nullable(Of AnyColor)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.AnyColor
    name: AnyColor
    nameWithType: AnyColor
    fullName: Imageflow.Fluent.AnyColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.AnyColor
    name: AnyColor
    nameWithType: AnyColor
    fullName: Imageflow.Fluent.AnyColor
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.LibPngEncoder.ZlibCompression*
  commentId: Overload:Imageflow.Fluent.LibPngEncoder.ZlibCompression
  name: ZlibCompression
  nameWithType: LibPngEncoder.ZlibCompression
  fullName: Imageflow.Fluent.LibPngEncoder.ZlibCompression
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.LibPngEncoder.BitDepth*
  commentId: Overload:Imageflow.Fluent.LibPngEncoder.BitDepth
  name: BitDepth
  nameWithType: LibPngEncoder.BitDepth
  fullName: Imageflow.Fluent.LibPngEncoder.BitDepth
- uid: System.Nullable{Imageflow.Fluent.PngBitDepth}
  commentId: T:System.Nullable{Imageflow.Fluent.PngBitDepth}
  parent: System
  definition: System.Nullable`1
  name: Nullable<PngBitDepth>
  nameWithType: Nullable<PngBitDepth>
  fullName: System.Nullable<Imageflow.Fluent.PngBitDepth>
  nameWithType.vb: Nullable(Of PngBitDepth)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.PngBitDepth)
  name.vb: Nullable(Of PngBitDepth)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.PngBitDepth
    name: PngBitDepth
    nameWithType: PngBitDepth
    fullName: Imageflow.Fluent.PngBitDepth
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.PngBitDepth
    name: PngBitDepth
    nameWithType: PngBitDepth
    fullName: Imageflow.Fluent.PngBitDepth
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic*
  commentId: Overload:Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic
  name: ToImageflowDynamic
  nameWithType: LibPngEncoder.ToImageflowDynamic
  fullName: Imageflow.Fluent.LibPngEncoder.ToImageflowDynamic
- uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  parent: Imageflow.Fluent.IEncoderPreset
  name: ToImageflowDynamic()
  nameWithType: IEncoderPreset.ToImageflowDynamic()
  fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic()
  spec.csharp:
  - uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
    name: ToImageflowDynamic
    nameWithType: IEncoderPreset.ToImageflowDynamic
    fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
    name: ToImageflowDynamic
    nameWithType: IEncoderPreset.ToImageflowDynamic
    fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
