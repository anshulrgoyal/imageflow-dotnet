### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.AnyColor
  commentId: T:Imageflow.Fluent.AnyColor
  id: AnyColor
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.AnyColor.Black
  - Imageflow.Fluent.AnyColor.FromHexSrgb(System.String)
  - Imageflow.Fluent.AnyColor.Srgb(Imageflow.Fluent.SrgbColor)
  - Imageflow.Fluent.AnyColor.ToImageflowDynamic
  - Imageflow.Fluent.AnyColor.Transparent
  langs:
  - csharp
  - vb
  name: AnyColor
  nameWithType: AnyColor
  fullName: Imageflow.Fluent.AnyColor
  type: Struct
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: AnyColor
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 7
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nRepresents a color with or without transparency.\n"
  example: []
  syntax:
    content: public struct AnyColor
    content.vb: Public Structure AnyColor
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Imageflow.Fluent.AnyColor.Black
  commentId: P:Imageflow.Fluent.AnyColor.Black
  id: Black
  parent: Imageflow.Fluent.AnyColor
  langs:
  - csharp
  - vb
  name: Black
  nameWithType: AnyColor.Black
  fullName: Imageflow.Fluent.AnyColor.Black
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Black
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 11
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public static AnyColor Black { get; }
    parameters: []
    return:
      type: Imageflow.Fluent.AnyColor
    content.vb: Public Shared ReadOnly Property Black As AnyColor
  overload: Imageflow.Fluent.AnyColor.Black*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Imageflow.Fluent.AnyColor.Transparent
  commentId: P:Imageflow.Fluent.AnyColor.Transparent
  id: Transparent
  parent: Imageflow.Fluent.AnyColor
  langs:
  - csharp
  - vb
  name: Transparent
  nameWithType: AnyColor.Transparent
  fullName: Imageflow.Fluent.AnyColor.Transparent
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Transparent
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 12
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public static AnyColor Transparent { get; }
    parameters: []
    return:
      type: Imageflow.Fluent.AnyColor
    content.vb: Public Shared ReadOnly Property Transparent As AnyColor
  overload: Imageflow.Fluent.AnyColor.Transparent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Imageflow.Fluent.AnyColor.FromHexSrgb(System.String)
  commentId: M:Imageflow.Fluent.AnyColor.FromHexSrgb(System.String)
  id: FromHexSrgb(System.String)
  parent: Imageflow.Fluent.AnyColor
  langs:
  - csharp
  - vb
  name: FromHexSrgb(String)
  nameWithType: AnyColor.FromHexSrgb(String)
  fullName: Imageflow.Fluent.AnyColor.FromHexSrgb(System.String)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: FromHexSrgb
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 18
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nParses color in RGB, RGBA, RRGGBB or RRGGBBAA format\n"
  example: []
  syntax:
    content: public static AnyColor FromHexSrgb(string hex)
    parameters:
    - id: hex
      type: System.String
      description: ''
    return:
      type: Imageflow.Fluent.AnyColor
      description: ''
    content.vb: Public Shared Function FromHexSrgb(hex As String) As AnyColor
  overload: Imageflow.Fluent.AnyColor.FromHexSrgb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Imageflow.Fluent.AnyColor.Srgb(Imageflow.Fluent.SrgbColor)
  commentId: M:Imageflow.Fluent.AnyColor.Srgb(Imageflow.Fluent.SrgbColor)
  id: Srgb(Imageflow.Fluent.SrgbColor)
  parent: Imageflow.Fluent.AnyColor
  langs:
  - csharp
  - vb
  name: Srgb(SrgbColor)
  nameWithType: AnyColor.Srgb(SrgbColor)
  fullName: Imageflow.Fluent.AnyColor.Srgb(Imageflow.Fluent.SrgbColor)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Srgb
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 19
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public static AnyColor Srgb(SrgbColor c)
    parameters:
    - id: c
      type: Imageflow.Fluent.SrgbColor
    return:
      type: Imageflow.Fluent.AnyColor
    content.vb: Public Shared Function Srgb(c As SrgbColor) As AnyColor
  overload: Imageflow.Fluent.AnyColor.Srgb*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Imageflow.Fluent.AnyColor.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.AnyColor.ToImageflowDynamic
  id: ToImageflowDynamic
  parent: Imageflow.Fluent.AnyColor
  langs:
  - csharp
  - vb
  name: ToImageflowDynamic()
  nameWithType: AnyColor.ToImageflowDynamic()
  fullName: Imageflow.Fluent.AnyColor.ToImageflowDynamic()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/AnyColor.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ToImageflowDynamic
    path: src/Imageflow/Fluent/AnyColor.cs
    startLine: 21
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public object ToImageflowDynamic()
    return:
      type: System.Object
    content.vb: Public Function ToImageflowDynamic As Object
  overload: Imageflow.Fluent.AnyColor.ToImageflowDynamic*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.AnyColor.Black*
  commentId: Overload:Imageflow.Fluent.AnyColor.Black
  name: Black
  nameWithType: AnyColor.Black
  fullName: Imageflow.Fluent.AnyColor.Black
- uid: Imageflow.Fluent.AnyColor
  commentId: T:Imageflow.Fluent.AnyColor
  parent: Imageflow.Fluent
  name: AnyColor
  nameWithType: AnyColor
  fullName: Imageflow.Fluent.AnyColor
- uid: Imageflow.Fluent.AnyColor.Transparent*
  commentId: Overload:Imageflow.Fluent.AnyColor.Transparent
  name: Transparent
  nameWithType: AnyColor.Transparent
  fullName: Imageflow.Fluent.AnyColor.Transparent
- uid: Imageflow.Fluent.AnyColor.FromHexSrgb*
  commentId: Overload:Imageflow.Fluent.AnyColor.FromHexSrgb
  name: FromHexSrgb
  nameWithType: AnyColor.FromHexSrgb
  fullName: Imageflow.Fluent.AnyColor.FromHexSrgb
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Imageflow.Fluent.AnyColor.Srgb*
  commentId: Overload:Imageflow.Fluent.AnyColor.Srgb
  name: Srgb
  nameWithType: AnyColor.Srgb
  fullName: Imageflow.Fluent.AnyColor.Srgb
- uid: Imageflow.Fluent.SrgbColor
  commentId: T:Imageflow.Fluent.SrgbColor
  parent: Imageflow.Fluent
  name: SrgbColor
  nameWithType: SrgbColor
  fullName: Imageflow.Fluent.SrgbColor
- uid: Imageflow.Fluent.AnyColor.ToImageflowDynamic*
  commentId: Overload:Imageflow.Fluent.AnyColor.ToImageflowDynamic
  name: ToImageflowDynamic
  nameWithType: AnyColor.ToImageflowDynamic
  fullName: Imageflow.Fluent.AnyColor.ToImageflowDynamic
