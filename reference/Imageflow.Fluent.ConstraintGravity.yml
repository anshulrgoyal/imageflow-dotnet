### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.ConstraintGravity
  commentId: T:Imageflow.Fluent.ConstraintGravity
  id: ConstraintGravity
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.ConstraintGravity.#ctor
  - Imageflow.Fluent.ConstraintGravity.#ctor(System.Single,System.Single)
  - Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic
  - Imageflow.Fluent.ConstraintGravity.XPercent
  - Imageflow.Fluent.ConstraintGravity.YPercent
  langs:
  - csharp
  - vb
  name: ConstraintGravity
  nameWithType: ConstraintGravity
  fullName: Imageflow.Fluent.ConstraintGravity
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ConstraintGravity
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 6
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public class ConstraintGravity
    content.vb: Public Class ConstraintGravity
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.ConstraintGravity.#ctor
  commentId: M:Imageflow.Fluent.ConstraintGravity.#ctor
  id: '#ctor'
  parent: Imageflow.Fluent.ConstraintGravity
  langs:
  - csharp
  - vb
  name: ConstraintGravity()
  nameWithType: ConstraintGravity.ConstraintGravity()
  fullName: Imageflow.Fluent.ConstraintGravity.ConstraintGravity()
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 11
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nCenters the gravity (the default)\n"
  example: []
  syntax:
    content: public ConstraintGravity()
    content.vb: Public Sub New
  overload: Imageflow.Fluent.ConstraintGravity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ConstraintGravity.#ctor(System.Single,System.Single)
  commentId: M:Imageflow.Fluent.ConstraintGravity.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Imageflow.Fluent.ConstraintGravity
  langs:
  - csharp
  - vb
  name: ConstraintGravity(Single, Single)
  nameWithType: ConstraintGravity.ConstraintGravity(Single, Single)
  fullName: Imageflow.Fluent.ConstraintGravity.ConstraintGravity(System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 21
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nAligns the watermark so xPercent of free space is on the left and yPercent of free space is on the top\n"
  example: []
  syntax:
    content: public ConstraintGravity(float xPercent, float yPercent)
    parameters:
    - id: xPercent
      type: System.Single
      description: ''
    - id: yPercent
      type: System.Single
      description: ''
    content.vb: Public Sub New(xPercent As Single, yPercent As Single)
  overload: Imageflow.Fluent.ConstraintGravity.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ConstraintGravity.XPercent
  commentId: P:Imageflow.Fluent.ConstraintGravity.XPercent
  id: XPercent
  parent: Imageflow.Fluent.ConstraintGravity
  langs:
  - csharp
  - vb
  name: XPercent
  nameWithType: ConstraintGravity.XPercent
  fullName: Imageflow.Fluent.ConstraintGravity.XPercent
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: XPercent
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 27
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public float XPercent { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property XPercent As Single
  overload: Imageflow.Fluent.ConstraintGravity.XPercent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Imageflow.Fluent.ConstraintGravity.YPercent
  commentId: P:Imageflow.Fluent.ConstraintGravity.YPercent
  id: YPercent
  parent: Imageflow.Fluent.ConstraintGravity
  langs:
  - csharp
  - vb
  name: YPercent
  nameWithType: ConstraintGravity.YPercent
  fullName: Imageflow.Fluent.ConstraintGravity.YPercent
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: YPercent
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 28
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public float YPercent { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property YPercent As Single
  overload: Imageflow.Fluent.ConstraintGravity.YPercent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic
  id: ToImageflowDynamic
  parent: Imageflow.Fluent.ConstraintGravity
  langs:
  - csharp
  - vb
  name: ToImageflowDynamic()
  nameWithType: ConstraintGravity.ToImageflowDynamic()
  fullName: Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ConstraintGravity.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ToImageflowDynamic
    path: src/Imageflow/Fluent/ConstraintGravity.cs
    startLine: 30
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public object ToImageflowDynamic()
    return:
      type: System.Object
    content.vb: Public Function ToImageflowDynamic As Object
  overload: Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.ConstraintGravity.#ctor*
  commentId: Overload:Imageflow.Fluent.ConstraintGravity.#ctor
  name: ConstraintGravity
  nameWithType: ConstraintGravity.ConstraintGravity
  fullName: Imageflow.Fluent.ConstraintGravity.ConstraintGravity
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Imageflow.Fluent.ConstraintGravity.XPercent*
  commentId: Overload:Imageflow.Fluent.ConstraintGravity.XPercent
  name: XPercent
  nameWithType: ConstraintGravity.XPercent
  fullName: Imageflow.Fluent.ConstraintGravity.XPercent
- uid: Imageflow.Fluent.ConstraintGravity.YPercent*
  commentId: Overload:Imageflow.Fluent.ConstraintGravity.YPercent
  name: YPercent
  nameWithType: ConstraintGravity.YPercent
  fullName: Imageflow.Fluent.ConstraintGravity.YPercent
- uid: Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic*
  commentId: Overload:Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic
  name: ToImageflowDynamic
  nameWithType: ConstraintGravity.ToImageflowDynamic
  fullName: Imageflow.Fluent.ConstraintGravity.ToImageflowDynamic
