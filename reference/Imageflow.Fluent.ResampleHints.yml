### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.ResampleHints
  commentId: T:Imageflow.Fluent.ResampleHints
  id: ResampleHints
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.ResampleHints.#ctor
  - Imageflow.Fluent.ResampleHints.#ctor(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen},System.Nullable{Imageflow.Fluent.ResampleWhen},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  - Imageflow.Fluent.ResampleHints.DownFilter
  - Imageflow.Fluent.ResampleHints.InterpolationColorspace
  - Imageflow.Fluent.ResampleHints.Resample(System.Nullable{Imageflow.Fluent.ResampleWhen})
  - Imageflow.Fluent.ResampleHints.ResampleColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  - Imageflow.Fluent.ResampleHints.ResampleFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  - Imageflow.Fluent.ResampleHints.ResampleWhen
  - Imageflow.Fluent.ResampleHints.SetDownSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  - Imageflow.Fluent.ResampleHints.SetInterpolationColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  - Imageflow.Fluent.ResampleHints.SetResampleFilters(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  - Imageflow.Fluent.ResampleHints.SetResampleWhen(System.Nullable{Imageflow.Fluent.ResampleWhen})
  - Imageflow.Fluent.ResampleHints.SetSharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  - Imageflow.Fluent.ResampleHints.SetSharpenPercent(System.Nullable{System.Single})
  - Imageflow.Fluent.ResampleHints.SetSharpenWhen(System.Nullable{Imageflow.Fluent.SharpenWhen})
  - Imageflow.Fluent.ResampleHints.SetUpSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  - Imageflow.Fluent.ResampleHints.Sharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  - Imageflow.Fluent.ResampleHints.SharpenPercent
  - Imageflow.Fluent.ResampleHints.SharpenWhen
  - Imageflow.Fluent.ResampleHints.ToImageflowDynamic
  - Imageflow.Fluent.ResampleHints.UpFilter
  langs:
  - csharp
  - vb
  name: ResampleHints
  nameWithType: ResampleHints
  fullName: Imageflow.Fluent.ResampleHints
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ResampleHints
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 4
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public class ResampleHints
    content.vb: Public Class ResampleHints
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.ResampleHints.SharpenWhen
  commentId: P:Imageflow.Fluent.ResampleHints.SharpenWhen
  id: SharpenWhen
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SharpenWhen
  nameWithType: ResampleHints.SharpenWhen
  fullName: Imageflow.Fluent.ResampleHints.SharpenWhen
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SharpenWhen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 6
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public SharpenWhen? SharpenWhen { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.SharpenWhen}
    content.vb: Public Property SharpenWhen As SharpenWhen?
  overload: Imageflow.Fluent.ResampleHints.SharpenWhen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.ResampleWhen
  commentId: P:Imageflow.Fluent.ResampleHints.ResampleWhen
  id: ResampleWhen
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ResampleWhen
  nameWithType: ResampleHints.ResampleWhen
  fullName: Imageflow.Fluent.ResampleHints.ResampleWhen
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ResampleWhen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 7
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleWhen? ResampleWhen { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.ResampleWhen}
    content.vb: Public Property ResampleWhen As ResampleWhen?
  overload: Imageflow.Fluent.ResampleHints.ResampleWhen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.InterpolationColorspace
  commentId: P:Imageflow.Fluent.ResampleHints.InterpolationColorspace
  id: InterpolationColorspace
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: InterpolationColorspace
  nameWithType: ResampleHints.InterpolationColorspace
  fullName: Imageflow.Fluent.ResampleHints.InterpolationColorspace
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: InterpolationColorspace
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 9
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ScalingFloatspace? InterpolationColorspace { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.ScalingFloatspace}
    content.vb: Public Property InterpolationColorspace As ScalingFloatspace?
  overload: Imageflow.Fluent.ResampleHints.InterpolationColorspace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.UpFilter
  commentId: P:Imageflow.Fluent.ResampleHints.UpFilter
  id: UpFilter
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: UpFilter
  nameWithType: ResampleHints.UpFilter
  fullName: Imageflow.Fluent.ResampleHints.UpFilter
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: UpFilter
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 10
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public InterpolationFilter? UpFilter { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    content.vb: Public Property UpFilter As InterpolationFilter?
  overload: Imageflow.Fluent.ResampleHints.UpFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.DownFilter
  commentId: P:Imageflow.Fluent.ResampleHints.DownFilter
  id: DownFilter
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: DownFilter
  nameWithType: ResampleHints.DownFilter
  fullName: Imageflow.Fluent.ResampleHints.DownFilter
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: DownFilter
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 11
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public InterpolationFilter? DownFilter { get; set; }
    parameters: []
    return:
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    content.vb: Public Property DownFilter As InterpolationFilter?
  overload: Imageflow.Fluent.ResampleHints.DownFilter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.SharpenPercent
  commentId: P:Imageflow.Fluent.ResampleHints.SharpenPercent
  id: SharpenPercent
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SharpenPercent
  nameWithType: ResampleHints.SharpenPercent
  fullName: Imageflow.Fluent.ResampleHints.SharpenPercent
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SharpenPercent
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 12
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public float? SharpenPercent { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Single}
    content.vb: Public Property SharpenPercent As Single?
  overload: Imageflow.Fluent.ResampleHints.SharpenPercent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.#ctor(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen},System.Nullable{Imageflow.Fluent.ResampleWhen},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  commentId: M:Imageflow.Fluent.ResampleHints.#ctor(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen},System.Nullable{Imageflow.Fluent.ResampleWhen},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  id: '#ctor(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen},System.Nullable{Imageflow.Fluent.ResampleWhen},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.ScalingFloatspace})'
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ResampleHints(Nullable<Single>, Nullable<SharpenWhen>, Nullable<ResampleWhen>, Nullable<InterpolationFilter>, Nullable<InterpolationFilter>, Nullable<ScalingFloatspace>)
  nameWithType: ResampleHints.ResampleHints(Nullable<Single>, Nullable<SharpenWhen>, Nullable<ResampleWhen>, Nullable<InterpolationFilter>, Nullable<InterpolationFilter>, Nullable<ScalingFloatspace>)
  fullName: Imageflow.Fluent.ResampleHints.ResampleHints(System.Nullable<System.Single>, System.Nullable<Imageflow.Fluent.SharpenWhen>, System.Nullable<Imageflow.Fluent.ResampleWhen>, System.Nullable<Imageflow.Fluent.InterpolationFilter>, System.Nullable<Imageflow.Fluent.InterpolationFilter>, System.Nullable<Imageflow.Fluent.ScalingFloatspace>)
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 14
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints(float? sharpenPercent, SharpenWhen? sharpenWhen, ResampleWhen? resampleWhen, InterpolationFilter? downFilter, InterpolationFilter? upFilter, ScalingFloatspace? interpolationColorspace)
    parameters:
    - id: sharpenPercent
      type: System.Nullable{System.Single}
    - id: sharpenWhen
      type: System.Nullable{Imageflow.Fluent.SharpenWhen}
    - id: resampleWhen
      type: System.Nullable{Imageflow.Fluent.ResampleWhen}
    - id: downFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    - id: upFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    - id: interpolationColorspace
      type: System.Nullable{Imageflow.Fluent.ScalingFloatspace}
    content.vb: Public Sub New(sharpenPercent As Single?, sharpenWhen As SharpenWhen?, resampleWhen As ResampleWhen?, downFilter As InterpolationFilter?, upFilter As InterpolationFilter?, interpolationColorspace As ScalingFloatspace?)
  overload: Imageflow.Fluent.ResampleHints.#ctor*
  nameWithType.vb: ResampleHints.ResampleHints(Nullable(Of Single), Nullable(Of SharpenWhen), Nullable(Of ResampleWhen), Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter), Nullable(Of ScalingFloatspace))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.ResampleHints(System.Nullable(Of System.Single), System.Nullable(Of Imageflow.Fluent.SharpenWhen), System.Nullable(Of Imageflow.Fluent.ResampleWhen), System.Nullable(Of Imageflow.Fluent.InterpolationFilter), System.Nullable(Of Imageflow.Fluent.InterpolationFilter), System.Nullable(Of Imageflow.Fluent.ScalingFloatspace))
  name.vb: ResampleHints(Nullable(Of Single), Nullable(Of SharpenWhen), Nullable(Of ResampleWhen), Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter), Nullable(Of ScalingFloatspace))
- uid: Imageflow.Fluent.ResampleHints.#ctor
  commentId: M:Imageflow.Fluent.ResampleHints.#ctor
  id: '#ctor'
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ResampleHints()
  nameWithType: ResampleHints.ResampleHints()
  fullName: Imageflow.Fluent.ResampleHints.ResampleHints()
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 24
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints()
    content.vb: Public Sub New
  overload: Imageflow.Fluent.ResampleHints.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.ResampleHints.Sharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  commentId: M:Imageflow.Fluent.ResampleHints.Sharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  id: Sharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: Sharpen(Nullable<Single>, Nullable<SharpenWhen>)
  nameWithType: ResampleHints.Sharpen(Nullable<Single>, Nullable<SharpenWhen>)
  fullName: Imageflow.Fluent.ResampleHints.Sharpen(System.Nullable<System.Single>, System.Nullable<Imageflow.Fluent.SharpenWhen>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Sharpen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 30
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: >-
      [Obsolete("Use SetSharpen instead")]

      public ResampleHints Sharpen(float? sharpenPercent, SharpenWhen? sharpenWhen)
    parameters:
    - id: sharpenPercent
      type: System.Nullable{System.Single}
    - id: sharpenWhen
      type: System.Nullable{Imageflow.Fluent.SharpenWhen}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: >-
      <Obsolete("Use SetSharpen instead")>

      Public Function Sharpen(sharpenPercent As Single?, sharpenWhen As SharpenWhen?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.Sharpen*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SetSharpen instead
  nameWithType.vb: ResampleHints.Sharpen(Nullable(Of Single), Nullable(Of SharpenWhen))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.Sharpen(System.Nullable(Of System.Single), System.Nullable(Of Imageflow.Fluent.SharpenWhen))
  name.vb: Sharpen(Nullable(Of Single), Nullable(Of SharpenWhen))
- uid: Imageflow.Fluent.ResampleHints.SetSharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  commentId: M:Imageflow.Fluent.ResampleHints.SetSharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  id: SetSharpen(System.Nullable{System.Single},System.Nullable{Imageflow.Fluent.SharpenWhen})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetSharpen(Nullable<Single>, Nullable<SharpenWhen>)
  nameWithType: ResampleHints.SetSharpen(Nullable<Single>, Nullable<SharpenWhen>)
  fullName: Imageflow.Fluent.ResampleHints.SetSharpen(System.Nullable<System.Single>, System.Nullable<Imageflow.Fluent.SharpenWhen>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetSharpen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 33
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetSharpen(float? sharpenPercent, SharpenWhen? sharpenWhen)
    parameters:
    - id: sharpenPercent
      type: System.Nullable{System.Single}
    - id: sharpenWhen
      type: System.Nullable{Imageflow.Fluent.SharpenWhen}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetSharpen(sharpenPercent As Single?, sharpenWhen As SharpenWhen?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetSharpen*
  nameWithType.vb: ResampleHints.SetSharpen(Nullable(Of Single), Nullable(Of SharpenWhen))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetSharpen(System.Nullable(Of System.Single), System.Nullable(Of Imageflow.Fluent.SharpenWhen))
  name.vb: SetSharpen(Nullable(Of Single), Nullable(Of SharpenWhen))
- uid: Imageflow.Fluent.ResampleHints.SetSharpenPercent(System.Nullable{System.Single})
  commentId: M:Imageflow.Fluent.ResampleHints.SetSharpenPercent(System.Nullable{System.Single})
  id: SetSharpenPercent(System.Nullable{System.Single})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetSharpenPercent(Nullable<Single>)
  nameWithType: ResampleHints.SetSharpenPercent(Nullable<Single>)
  fullName: Imageflow.Fluent.ResampleHints.SetSharpenPercent(System.Nullable<System.Single>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetSharpenPercent
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 40
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetSharpenPercent(float? sharpenPercent)
    parameters:
    - id: sharpenPercent
      type: System.Nullable{System.Single}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetSharpenPercent(sharpenPercent As Single?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetSharpenPercent*
  nameWithType.vb: ResampleHints.SetSharpenPercent(Nullable(Of Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetSharpenPercent(System.Nullable(Of System.Single))
  name.vb: SetSharpenPercent(Nullable(Of Single))
- uid: Imageflow.Fluent.ResampleHints.SetSharpenWhen(System.Nullable{Imageflow.Fluent.SharpenWhen})
  commentId: M:Imageflow.Fluent.ResampleHints.SetSharpenWhen(System.Nullable{Imageflow.Fluent.SharpenWhen})
  id: SetSharpenWhen(System.Nullable{Imageflow.Fluent.SharpenWhen})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetSharpenWhen(Nullable<SharpenWhen>)
  nameWithType: ResampleHints.SetSharpenWhen(Nullable<SharpenWhen>)
  fullName: Imageflow.Fluent.ResampleHints.SetSharpenWhen(System.Nullable<Imageflow.Fluent.SharpenWhen>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetSharpenWhen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 45
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetSharpenWhen(SharpenWhen? sharpenWhen)
    parameters:
    - id: sharpenWhen
      type: System.Nullable{Imageflow.Fluent.SharpenWhen}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetSharpenWhen(sharpenWhen As SharpenWhen?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetSharpenWhen*
  nameWithType.vb: ResampleHints.SetSharpenWhen(Nullable(Of SharpenWhen))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetSharpenWhen(System.Nullable(Of Imageflow.Fluent.SharpenWhen))
  name.vb: SetSharpenWhen(Nullable(Of SharpenWhen))
- uid: Imageflow.Fluent.ResampleHints.ResampleFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  commentId: M:Imageflow.Fluent.ResampleHints.ResampleFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  id: ResampleFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ResampleFilter(Nullable<InterpolationFilter>, Nullable<InterpolationFilter>)
  nameWithType: ResampleHints.ResampleFilter(Nullable<InterpolationFilter>, Nullable<InterpolationFilter>)
  fullName: Imageflow.Fluent.ResampleHints.ResampleFilter(System.Nullable<Imageflow.Fluent.InterpolationFilter>, System.Nullable<Imageflow.Fluent.InterpolationFilter>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ResampleFilter
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 51
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: >-
      [Obsolete("Use SetResampleFilters instead")]

      public ResampleHints ResampleFilter(InterpolationFilter? downFilter, InterpolationFilter? upFilter)
    parameters:
    - id: downFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    - id: upFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: >-
      <Obsolete("Use SetResampleFilters instead")>

      Public Function ResampleFilter(downFilter As InterpolationFilter?, upFilter As InterpolationFilter?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.ResampleFilter*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SetResampleFilters instead
  nameWithType.vb: ResampleHints.ResampleFilter(Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.ResampleFilter(System.Nullable(Of Imageflow.Fluent.InterpolationFilter), System.Nullable(Of Imageflow.Fluent.InterpolationFilter))
  name.vb: ResampleFilter(Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter))
- uid: Imageflow.Fluent.ResampleHints.SetResampleFilters(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  commentId: M:Imageflow.Fluent.ResampleHints.SetResampleFilters(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  id: SetResampleFilters(System.Nullable{Imageflow.Fluent.InterpolationFilter},System.Nullable{Imageflow.Fluent.InterpolationFilter})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetResampleFilters(Nullable<InterpolationFilter>, Nullable<InterpolationFilter>)
  nameWithType: ResampleHints.SetResampleFilters(Nullable<InterpolationFilter>, Nullable<InterpolationFilter>)
  fullName: Imageflow.Fluent.ResampleHints.SetResampleFilters(System.Nullable<Imageflow.Fluent.InterpolationFilter>, System.Nullable<Imageflow.Fluent.InterpolationFilter>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetResampleFilters
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 59
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetResampleFilters(InterpolationFilter? downFilter, InterpolationFilter? upFilter)
    parameters:
    - id: downFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    - id: upFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetResampleFilters(downFilter As InterpolationFilter?, upFilter As InterpolationFilter?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetResampleFilters*
  nameWithType.vb: ResampleHints.SetResampleFilters(Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetResampleFilters(System.Nullable(Of Imageflow.Fluent.InterpolationFilter), System.Nullable(Of Imageflow.Fluent.InterpolationFilter))
  name.vb: SetResampleFilters(Nullable(Of InterpolationFilter), Nullable(Of InterpolationFilter))
- uid: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  commentId: M:Imageflow.Fluent.ResampleHints.SetUpSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  id: SetUpSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetUpSamplingFilter(Nullable<InterpolationFilter>)
  nameWithType: ResampleHints.SetUpSamplingFilter(Nullable<InterpolationFilter>)
  fullName: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter(System.Nullable<Imageflow.Fluent.InterpolationFilter>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetUpSamplingFilter
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 66
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetUpSamplingFilter(InterpolationFilter? upFilter)
    parameters:
    - id: upFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetUpSamplingFilter(upFilter As InterpolationFilter?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter*
  nameWithType.vb: ResampleHints.SetUpSamplingFilter(Nullable(Of InterpolationFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter(System.Nullable(Of Imageflow.Fluent.InterpolationFilter))
  name.vb: SetUpSamplingFilter(Nullable(Of InterpolationFilter))
- uid: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  commentId: M:Imageflow.Fluent.ResampleHints.SetDownSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  id: SetDownSamplingFilter(System.Nullable{Imageflow.Fluent.InterpolationFilter})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetDownSamplingFilter(Nullable<InterpolationFilter>)
  nameWithType: ResampleHints.SetDownSamplingFilter(Nullable<InterpolationFilter>)
  fullName: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter(System.Nullable<Imageflow.Fluent.InterpolationFilter>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetDownSamplingFilter
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 71
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetDownSamplingFilter(InterpolationFilter? downFilter)
    parameters:
    - id: downFilter
      type: System.Nullable{Imageflow.Fluent.InterpolationFilter}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetDownSamplingFilter(downFilter As InterpolationFilter?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter*
  nameWithType.vb: ResampleHints.SetDownSamplingFilter(Nullable(Of InterpolationFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter(System.Nullable(Of Imageflow.Fluent.InterpolationFilter))
  name.vb: SetDownSamplingFilter(Nullable(Of InterpolationFilter))
- uid: Imageflow.Fluent.ResampleHints.Resample(System.Nullable{Imageflow.Fluent.ResampleWhen})
  commentId: M:Imageflow.Fluent.ResampleHints.Resample(System.Nullable{Imageflow.Fluent.ResampleWhen})
  id: Resample(System.Nullable{Imageflow.Fluent.ResampleWhen})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: Resample(Nullable<ResampleWhen>)
  nameWithType: ResampleHints.Resample(Nullable<ResampleWhen>)
  fullName: Imageflow.Fluent.ResampleHints.Resample(System.Nullable<Imageflow.Fluent.ResampleWhen>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Resample
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 77
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: >-
      [Obsolete("Use SetResampleWhen instead")]

      public ResampleHints Resample(ResampleWhen? resampleWhen)
    parameters:
    - id: resampleWhen
      type: System.Nullable{Imageflow.Fluent.ResampleWhen}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: >-
      <Obsolete("Use SetResampleWhen instead")>

      Public Function Resample(resampleWhen As ResampleWhen?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.Resample*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SetResampleWhen instead
  nameWithType.vb: ResampleHints.Resample(Nullable(Of ResampleWhen))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.Resample(System.Nullable(Of Imageflow.Fluent.ResampleWhen))
  name.vb: Resample(Nullable(Of ResampleWhen))
- uid: Imageflow.Fluent.ResampleHints.SetResampleWhen(System.Nullable{Imageflow.Fluent.ResampleWhen})
  commentId: M:Imageflow.Fluent.ResampleHints.SetResampleWhen(System.Nullable{Imageflow.Fluent.ResampleWhen})
  id: SetResampleWhen(System.Nullable{Imageflow.Fluent.ResampleWhen})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetResampleWhen(Nullable<ResampleWhen>)
  nameWithType: ResampleHints.SetResampleWhen(Nullable<ResampleWhen>)
  fullName: Imageflow.Fluent.ResampleHints.SetResampleWhen(System.Nullable<Imageflow.Fluent.ResampleWhen>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetResampleWhen
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 84
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetResampleWhen(ResampleWhen? resampleWhen)
    parameters:
    - id: resampleWhen
      type: System.Nullable{Imageflow.Fluent.ResampleWhen}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetResampleWhen(resampleWhen As ResampleWhen?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetResampleWhen*
  nameWithType.vb: ResampleHints.SetResampleWhen(Nullable(Of ResampleWhen))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetResampleWhen(System.Nullable(Of Imageflow.Fluent.ResampleWhen))
  name.vb: SetResampleWhen(Nullable(Of ResampleWhen))
- uid: Imageflow.Fluent.ResampleHints.ResampleColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  commentId: M:Imageflow.Fluent.ResampleHints.ResampleColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  id: ResampleColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ResampleColorspace(Nullable<ScalingFloatspace>)
  nameWithType: ResampleHints.ResampleColorspace(Nullable<ScalingFloatspace>)
  fullName: Imageflow.Fluent.ResampleHints.ResampleColorspace(System.Nullable<Imageflow.Fluent.ScalingFloatspace>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ResampleColorspace
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 91
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: >-
      [Obsolete("Use SetInterpolationColorspace instead")]

      public ResampleHints ResampleColorspace(ScalingFloatspace? interpolationColorspace)
    parameters:
    - id: interpolationColorspace
      type: System.Nullable{Imageflow.Fluent.ScalingFloatspace}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: >-
      <Obsolete("Use SetInterpolationColorspace instead")>

      Public Function ResampleColorspace(interpolationColorspace As ScalingFloatspace?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.ResampleColorspace*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use SetInterpolationColorspace instead
  nameWithType.vb: ResampleHints.ResampleColorspace(Nullable(Of ScalingFloatspace))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.ResampleColorspace(System.Nullable(Of Imageflow.Fluent.ScalingFloatspace))
  name.vb: ResampleColorspace(Nullable(Of ScalingFloatspace))
- uid: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  commentId: M:Imageflow.Fluent.ResampleHints.SetInterpolationColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  id: SetInterpolationColorspace(System.Nullable{Imageflow.Fluent.ScalingFloatspace})
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: SetInterpolationColorspace(Nullable<ScalingFloatspace>)
  nameWithType: ResampleHints.SetInterpolationColorspace(Nullable<ScalingFloatspace>)
  fullName: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace(System.Nullable<Imageflow.Fluent.ScalingFloatspace>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetInterpolationColorspace
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 98
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public ResampleHints SetInterpolationColorspace(ScalingFloatspace? interpolationColorspace)
    parameters:
    - id: interpolationColorspace
      type: System.Nullable{Imageflow.Fluent.ScalingFloatspace}
    return:
      type: Imageflow.Fluent.ResampleHints
    content.vb: Public Function SetInterpolationColorspace(interpolationColorspace As ScalingFloatspace?) As ResampleHints
  overload: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace*
  nameWithType.vb: ResampleHints.SetInterpolationColorspace(Nullable(Of ScalingFloatspace))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace(System.Nullable(Of Imageflow.Fluent.ScalingFloatspace))
  name.vb: SetInterpolationColorspace(Nullable(Of ScalingFloatspace))
- uid: Imageflow.Fluent.ResampleHints.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.ResampleHints.ToImageflowDynamic
  id: ToImageflowDynamic
  parent: Imageflow.Fluent.ResampleHints
  langs:
  - csharp
  - vb
  name: ToImageflowDynamic()
  nameWithType: ResampleHints.ToImageflowDynamic()
  fullName: Imageflow.Fluent.ResampleHints.ToImageflowDynamic()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/ResampleHints.cs
      branch: af211ba6636e5cd2df38be17a4ebc839e3f3b486
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ToImageflowDynamic
    path: src/Imageflow/Fluent/ResampleHints.cs
    startLine: 105
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public object ToImageflowDynamic()
    return:
      type: System.Object
    content.vb: Public Function ToImageflowDynamic As Object
  overload: Imageflow.Fluent.ResampleHints.ToImageflowDynamic*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.ResampleHints.SharpenWhen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SharpenWhen
  name: SharpenWhen
  nameWithType: ResampleHints.SharpenWhen
  fullName: Imageflow.Fluent.ResampleHints.SharpenWhen
- uid: System.Nullable{Imageflow.Fluent.SharpenWhen}
  commentId: T:System.Nullable{Imageflow.Fluent.SharpenWhen}
  parent: System
  definition: System.Nullable`1
  name: Nullable<SharpenWhen>
  nameWithType: Nullable<SharpenWhen>
  fullName: System.Nullable<Imageflow.Fluent.SharpenWhen>
  nameWithType.vb: Nullable(Of SharpenWhen)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.SharpenWhen)
  name.vb: Nullable(Of SharpenWhen)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.SharpenWhen
    name: SharpenWhen
    nameWithType: SharpenWhen
    fullName: Imageflow.Fluent.SharpenWhen
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.SharpenWhen
    name: SharpenWhen
    nameWithType: SharpenWhen
    fullName: Imageflow.Fluent.SharpenWhen
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.ResampleHints.ResampleWhen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.ResampleWhen
  name: ResampleWhen
  nameWithType: ResampleHints.ResampleWhen
  fullName: Imageflow.Fluent.ResampleHints.ResampleWhen
- uid: System.Nullable{Imageflow.Fluent.ResampleWhen}
  commentId: T:System.Nullable{Imageflow.Fluent.ResampleWhen}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ResampleWhen>
  nameWithType: Nullable<ResampleWhen>
  fullName: System.Nullable<Imageflow.Fluent.ResampleWhen>
  nameWithType.vb: Nullable(Of ResampleWhen)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.ResampleWhen)
  name.vb: Nullable(Of ResampleWhen)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.ResampleWhen
    name: ResampleWhen
    nameWithType: ResampleWhen
    fullName: Imageflow.Fluent.ResampleWhen
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.ResampleWhen
    name: ResampleWhen
    nameWithType: ResampleWhen
    fullName: Imageflow.Fluent.ResampleWhen
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.ResampleHints.InterpolationColorspace*
  commentId: Overload:Imageflow.Fluent.ResampleHints.InterpolationColorspace
  name: InterpolationColorspace
  nameWithType: ResampleHints.InterpolationColorspace
  fullName: Imageflow.Fluent.ResampleHints.InterpolationColorspace
- uid: System.Nullable{Imageflow.Fluent.ScalingFloatspace}
  commentId: T:System.Nullable{Imageflow.Fluent.ScalingFloatspace}
  parent: System
  definition: System.Nullable`1
  name: Nullable<ScalingFloatspace>
  nameWithType: Nullable<ScalingFloatspace>
  fullName: System.Nullable<Imageflow.Fluent.ScalingFloatspace>
  nameWithType.vb: Nullable(Of ScalingFloatspace)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.ScalingFloatspace)
  name.vb: Nullable(Of ScalingFloatspace)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.ScalingFloatspace
    name: ScalingFloatspace
    nameWithType: ScalingFloatspace
    fullName: Imageflow.Fluent.ScalingFloatspace
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.ScalingFloatspace
    name: ScalingFloatspace
    nameWithType: ScalingFloatspace
    fullName: Imageflow.Fluent.ScalingFloatspace
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.ResampleHints.UpFilter*
  commentId: Overload:Imageflow.Fluent.ResampleHints.UpFilter
  name: UpFilter
  nameWithType: ResampleHints.UpFilter
  fullName: Imageflow.Fluent.ResampleHints.UpFilter
- uid: System.Nullable{Imageflow.Fluent.InterpolationFilter}
  commentId: T:System.Nullable{Imageflow.Fluent.InterpolationFilter}
  parent: System
  definition: System.Nullable`1
  name: Nullable<InterpolationFilter>
  nameWithType: Nullable<InterpolationFilter>
  fullName: System.Nullable<Imageflow.Fluent.InterpolationFilter>
  nameWithType.vb: Nullable(Of InterpolationFilter)
  fullName.vb: System.Nullable(Of Imageflow.Fluent.InterpolationFilter)
  name.vb: Nullable(Of InterpolationFilter)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.InterpolationFilter
    name: InterpolationFilter
    nameWithType: InterpolationFilter
    fullName: Imageflow.Fluent.InterpolationFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.InterpolationFilter
    name: InterpolationFilter
    nameWithType: InterpolationFilter
    fullName: Imageflow.Fluent.InterpolationFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.ResampleHints.DownFilter*
  commentId: Overload:Imageflow.Fluent.ResampleHints.DownFilter
  name: DownFilter
  nameWithType: ResampleHints.DownFilter
  fullName: Imageflow.Fluent.ResampleHints.DownFilter
- uid: Imageflow.Fluent.ResampleHints.SharpenPercent*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SharpenPercent
  name: SharpenPercent
  nameWithType: ResampleHints.SharpenPercent
  fullName: Imageflow.Fluent.ResampleHints.SharpenPercent
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  nameWithType: Nullable<Single>
  fullName: System.Nullable<System.Single>
  nameWithType.vb: Nullable(Of Single)
  fullName.vb: System.Nullable(Of System.Single)
  name.vb: Nullable(Of Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.ResampleHints.#ctor*
  commentId: Overload:Imageflow.Fluent.ResampleHints.#ctor
  name: ResampleHints
  nameWithType: ResampleHints.ResampleHints
  fullName: Imageflow.Fluent.ResampleHints.ResampleHints
- uid: Imageflow.Fluent.ResampleHints.Sharpen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.Sharpen
  name: Sharpen
  nameWithType: ResampleHints.Sharpen
  fullName: Imageflow.Fluent.ResampleHints.Sharpen
- uid: Imageflow.Fluent.ResampleHints
  commentId: T:Imageflow.Fluent.ResampleHints
  parent: Imageflow.Fluent
  name: ResampleHints
  nameWithType: ResampleHints
  fullName: Imageflow.Fluent.ResampleHints
- uid: Imageflow.Fluent.ResampleHints.SetSharpen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetSharpen
  name: SetSharpen
  nameWithType: ResampleHints.SetSharpen
  fullName: Imageflow.Fluent.ResampleHints.SetSharpen
- uid: Imageflow.Fluent.ResampleHints.SetSharpenPercent*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetSharpenPercent
  name: SetSharpenPercent
  nameWithType: ResampleHints.SetSharpenPercent
  fullName: Imageflow.Fluent.ResampleHints.SetSharpenPercent
- uid: Imageflow.Fluent.ResampleHints.SetSharpenWhen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetSharpenWhen
  name: SetSharpenWhen
  nameWithType: ResampleHints.SetSharpenWhen
  fullName: Imageflow.Fluent.ResampleHints.SetSharpenWhen
- uid: Imageflow.Fluent.ResampleHints.ResampleFilter*
  commentId: Overload:Imageflow.Fluent.ResampleHints.ResampleFilter
  name: ResampleFilter
  nameWithType: ResampleHints.ResampleFilter
  fullName: Imageflow.Fluent.ResampleHints.ResampleFilter
- uid: Imageflow.Fluent.ResampleHints.SetResampleFilters*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetResampleFilters
  name: SetResampleFilters
  nameWithType: ResampleHints.SetResampleFilters
  fullName: Imageflow.Fluent.ResampleHints.SetResampleFilters
- uid: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetUpSamplingFilter
  name: SetUpSamplingFilter
  nameWithType: ResampleHints.SetUpSamplingFilter
  fullName: Imageflow.Fluent.ResampleHints.SetUpSamplingFilter
- uid: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetDownSamplingFilter
  name: SetDownSamplingFilter
  nameWithType: ResampleHints.SetDownSamplingFilter
  fullName: Imageflow.Fluent.ResampleHints.SetDownSamplingFilter
- uid: Imageflow.Fluent.ResampleHints.Resample*
  commentId: Overload:Imageflow.Fluent.ResampleHints.Resample
  name: Resample
  nameWithType: ResampleHints.Resample
  fullName: Imageflow.Fluent.ResampleHints.Resample
- uid: Imageflow.Fluent.ResampleHints.SetResampleWhen*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetResampleWhen
  name: SetResampleWhen
  nameWithType: ResampleHints.SetResampleWhen
  fullName: Imageflow.Fluent.ResampleHints.SetResampleWhen
- uid: Imageflow.Fluent.ResampleHints.ResampleColorspace*
  commentId: Overload:Imageflow.Fluent.ResampleHints.ResampleColorspace
  name: ResampleColorspace
  nameWithType: ResampleHints.ResampleColorspace
  fullName: Imageflow.Fluent.ResampleHints.ResampleColorspace
- uid: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace*
  commentId: Overload:Imageflow.Fluent.ResampleHints.SetInterpolationColorspace
  name: SetInterpolationColorspace
  nameWithType: ResampleHints.SetInterpolationColorspace
  fullName: Imageflow.Fluent.ResampleHints.SetInterpolationColorspace
- uid: Imageflow.Fluent.ResampleHints.ToImageflowDynamic*
  commentId: Overload:Imageflow.Fluent.ResampleHints.ToImageflowDynamic
  name: ToImageflowDynamic
  nameWithType: ResampleHints.ToImageflowDynamic
  fullName: Imageflow.Fluent.ResampleHints.ToImageflowDynamic
