### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.MozJpegEncoder
  commentId: T:Imageflow.Fluent.MozJpegEncoder
  id: MozJpegEncoder
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32)
  - Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32,System.Boolean)
  - Imageflow.Fluent.MozJpegEncoder.Progressive
  - Imageflow.Fluent.MozJpegEncoder.Quality
  - Imageflow.Fluent.MozJpegEncoder.SetProgressive(System.Boolean)
  - Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic
  langs:
  - csharp
  - vb
  name: MozJpegEncoder
  nameWithType: MozJpegEncoder
  fullName: Imageflow.Fluent.MozJpegEncoder
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: MozJpegEncoder
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 154
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: 'public class MozJpegEncoder : IEncoderPreset'
    content.vb: >-
      Public Class MozJpegEncoder
          Implements IEncoderPreset
  inheritance:
  - System.Object
  implements:
  - Imageflow.Fluent.IEncoderPreset
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32)
  commentId: M:Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: MozJpegEncoder(Int32)
  nameWithType: MozJpegEncoder.MozJpegEncoder(Int32)
  fullName: Imageflow.Fluent.MozJpegEncoder.MozJpegEncoder(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 156
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public MozJpegEncoder(int quality)
    parameters:
    - id: quality
      type: System.Int32
    content.vb: Public Sub New(quality As Integer)
  overload: Imageflow.Fluent.MozJpegEncoder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32,System.Boolean)
  commentId: M:Imageflow.Fluent.MozJpegEncoder.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: MozJpegEncoder(Int32, Boolean)
  nameWithType: MozJpegEncoder.MozJpegEncoder(Int32, Boolean)
  fullName: Imageflow.Fluent.MozJpegEncoder.MozJpegEncoder(System.Int32, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 160
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public MozJpegEncoder(int quality, bool progressive)
    parameters:
    - id: quality
      type: System.Int32
    - id: progressive
      type: System.Boolean
    content.vb: Public Sub New(quality As Integer, progressive As Boolean)
  overload: Imageflow.Fluent.MozJpegEncoder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.MozJpegEncoder.Quality
  commentId: P:Imageflow.Fluent.MozJpegEncoder.Quality
  id: Quality
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: MozJpegEncoder.Quality
  fullName: Imageflow.Fluent.MozJpegEncoder.Quality
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Quality
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 165
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public int? Quality { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Quality As Integer?
  overload: Imageflow.Fluent.MozJpegEncoder.Quality*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.MozJpegEncoder.Progressive
  commentId: P:Imageflow.Fluent.MozJpegEncoder.Progressive
  id: Progressive
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: Progressive
  nameWithType: MozJpegEncoder.Progressive
  fullName: Imageflow.Fluent.MozJpegEncoder.Progressive
  type: Property
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Progressive
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 166
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public bool? Progressive { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property Progressive As Boolean?
  overload: Imageflow.Fluent.MozJpegEncoder.Progressive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.MozJpegEncoder.SetProgressive(System.Boolean)
  commentId: M:Imageflow.Fluent.MozJpegEncoder.SetProgressive(System.Boolean)
  id: SetProgressive(System.Boolean)
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: SetProgressive(Boolean)
  nameWithType: MozJpegEncoder.SetProgressive(Boolean)
  fullName: Imageflow.Fluent.MozJpegEncoder.SetProgressive(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetProgressive
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 168
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public MozJpegEncoder SetProgressive(bool progressive)
    parameters:
    - id: progressive
      type: System.Boolean
    return:
      type: Imageflow.Fluent.MozJpegEncoder
    content.vb: Public Function SetProgressive(progressive As Boolean) As MozJpegEncoder
  overload: Imageflow.Fluent.MozJpegEncoder.SetProgressive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic
  id: ToImageflowDynamic
  parent: Imageflow.Fluent.MozJpegEncoder
  langs:
  - csharp
  - vb
  name: ToImageflowDynamic()
  nameWithType: MozJpegEncoder.ToImageflowDynamic()
  fullName: Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/IEncoderPreset.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: ToImageflowDynamic
    path: src/Imageflow/Fluent/IEncoderPreset.cs
    startLine: 174
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public object ToImageflowDynamic()
    return:
      type: System.Object
    content.vb: Public Function ToImageflowDynamic As Object
  overload: Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic*
  implements:
  - Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Imageflow.Fluent.IEncoderPreset
  commentId: T:Imageflow.Fluent.IEncoderPreset
  parent: Imageflow.Fluent
  name: IEncoderPreset
  nameWithType: IEncoderPreset
  fullName: Imageflow.Fluent.IEncoderPreset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.MozJpegEncoder.#ctor*
  commentId: Overload:Imageflow.Fluent.MozJpegEncoder.#ctor
  name: MozJpegEncoder
  nameWithType: MozJpegEncoder.MozJpegEncoder
  fullName: Imageflow.Fluent.MozJpegEncoder.MozJpegEncoder
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Imageflow.Fluent.MozJpegEncoder.Quality*
  commentId: Overload:Imageflow.Fluent.MozJpegEncoder.Quality
  name: Quality
  nameWithType: MozJpegEncoder.Quality
  fullName: Imageflow.Fluent.MozJpegEncoder.Quality
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.MozJpegEncoder.Progressive*
  commentId: Overload:Imageflow.Fluent.MozJpegEncoder.Progressive
  name: Progressive
  nameWithType: MozJpegEncoder.Progressive
  fullName: Imageflow.Fluent.MozJpegEncoder.Progressive
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.MozJpegEncoder.SetProgressive*
  commentId: Overload:Imageflow.Fluent.MozJpegEncoder.SetProgressive
  name: SetProgressive
  nameWithType: MozJpegEncoder.SetProgressive
  fullName: Imageflow.Fluent.MozJpegEncoder.SetProgressive
- uid: Imageflow.Fluent.MozJpegEncoder
  commentId: T:Imageflow.Fluent.MozJpegEncoder
  parent: Imageflow.Fluent
  name: MozJpegEncoder
  nameWithType: MozJpegEncoder
  fullName: Imageflow.Fluent.MozJpegEncoder
- uid: Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic*
  commentId: Overload:Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic
  name: ToImageflowDynamic
  nameWithType: MozJpegEncoder.ToImageflowDynamic
  fullName: Imageflow.Fluent.MozJpegEncoder.ToImageflowDynamic
- uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  commentId: M:Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  parent: Imageflow.Fluent.IEncoderPreset
  name: ToImageflowDynamic()
  nameWithType: IEncoderPreset.ToImageflowDynamic()
  fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic()
  spec.csharp:
  - uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
    name: ToImageflowDynamic
    nameWithType: IEncoderPreset.ToImageflowDynamic
    fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
    name: ToImageflowDynamic
    nameWithType: IEncoderPreset.ToImageflowDynamic
    fullName: Imageflow.Fluent.IEncoderPreset.ToImageflowDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
