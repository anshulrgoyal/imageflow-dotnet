### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.BuildItemBase
  commentId: T:Imageflow.Fluent.BuildItemBase
  id: BuildItemBase
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.BuildItemBase.#ctor(Imageflow.Fluent.ImageJob,System.Object,Imageflow.Fluent.BuildNode,Imageflow.Fluent.BuildNode)
  - Imageflow.Fluent.BuildItemBase.Equals(System.Object)
  - Imageflow.Fluent.BuildItemBase.GetHashCode
  langs:
  - csharp
  - vb
  name: BuildItemBase
  nameWithType: BuildItemBase
  fullName: Imageflow.Fluent.BuildItemBase
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/BuildItemBase.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: BuildItemBase
    path: src/Imageflow/Fluent/BuildItemBase.cs
    startLine: 7
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nBase class for nodes in the job graph\n"
  example: []
  syntax:
    content: public class BuildItemBase
    content.vb: Public Class BuildItemBase
  inheritance:
  - System.Object
  derivedClasses:
  - Imageflow.Fluent.BuildEndpoint
  - Imageflow.Fluent.BuildNode
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.BuildItemBase.Equals(System.Object)
  commentId: M:Imageflow.Fluent.BuildItemBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: Imageflow.Fluent.BuildItemBase
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BuildItemBase.Equals(Object)
  fullName: Imageflow.Fluent.BuildItemBase.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/BuildItemBase.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: Equals
    path: src/Imageflow/Fluent/BuildItemBase.cs
    startLine: 14
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Imageflow.Fluent.BuildItemBase.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Imageflow.Fluent.BuildItemBase.GetHashCode
  commentId: M:Imageflow.Fluent.BuildItemBase.GetHashCode
  id: GetHashCode
  parent: Imageflow.Fluent.BuildItemBase
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BuildItemBase.GetHashCode()
  fullName: Imageflow.Fluent.BuildItemBase.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/BuildItemBase.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: GetHashCode
    path: src/Imageflow/Fluent/BuildItemBase.cs
    startLine: 15
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Imageflow.Fluent.BuildItemBase.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Imageflow.Fluent.BuildItemBase.#ctor(Imageflow.Fluent.ImageJob,System.Object,Imageflow.Fluent.BuildNode,Imageflow.Fluent.BuildNode)
  commentId: M:Imageflow.Fluent.BuildItemBase.#ctor(Imageflow.Fluent.ImageJob,System.Object,Imageflow.Fluent.BuildNode,Imageflow.Fluent.BuildNode)
  id: '#ctor(Imageflow.Fluent.ImageJob,System.Object,Imageflow.Fluent.BuildNode,Imageflow.Fluent.BuildNode)'
  parent: Imageflow.Fluent.BuildItemBase
  langs:
  - csharp
  - vb
  name: BuildItemBase(ImageJob, Object, BuildNode, BuildNode)
  nameWithType: BuildItemBase.BuildItemBase(ImageJob, Object, BuildNode, BuildNode)
  fullName: Imageflow.Fluent.BuildItemBase.BuildItemBase(Imageflow.Fluent.ImageJob, System.Object, Imageflow.Fluent.BuildNode, Imageflow.Fluent.BuildNode)
  type: Constructor
  source:
    remote:
      path: src/Imageflow/Fluent/BuildItemBase.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: .ctor
    path: src/Imageflow/Fluent/BuildItemBase.cs
    startLine: 21
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: protected BuildItemBase(ImageJob builder, object nodeData, BuildNode inputNode, BuildNode canvasNode)
    parameters:
    - id: builder
      type: Imageflow.Fluent.ImageJob
    - id: nodeData
      type: System.Object
    - id: inputNode
      type: Imageflow.Fluent.BuildNode
    - id: canvasNode
      type: Imageflow.Fluent.BuildNode
    content.vb: Protected Sub New(builder As ImageJob, nodeData As Object, inputNode As BuildNode, canvasNode As BuildNode)
  overload: Imageflow.Fluent.BuildItemBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.BuildItemBase.Equals*
  commentId: Overload:Imageflow.Fluent.BuildItemBase.Equals
  name: Equals
  nameWithType: BuildItemBase.Equals
  fullName: Imageflow.Fluent.BuildItemBase.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.BuildItemBase.GetHashCode*
  commentId: Overload:Imageflow.Fluent.BuildItemBase.GetHashCode
  name: GetHashCode
  nameWithType: BuildItemBase.GetHashCode
  fullName: Imageflow.Fluent.BuildItemBase.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Imageflow.Fluent.BuildItemBase.#ctor*
  commentId: Overload:Imageflow.Fluent.BuildItemBase.#ctor
  name: BuildItemBase
  nameWithType: BuildItemBase.BuildItemBase
  fullName: Imageflow.Fluent.BuildItemBase.BuildItemBase
- uid: Imageflow.Fluent.ImageJob
  commentId: T:Imageflow.Fluent.ImageJob
  parent: Imageflow.Fluent
  name: ImageJob
  nameWithType: ImageJob
  fullName: Imageflow.Fluent.ImageJob
- uid: Imageflow.Fluent.BuildNode
  commentId: T:Imageflow.Fluent.BuildNode
  parent: Imageflow.Fluent
  name: BuildNode
  nameWithType: BuildNode
  fullName: Imageflow.Fluent.BuildNode
