### YamlMime:ManagedReference
items:
- uid: Imageflow.Fluent.FinishJobBuilder
  commentId: T:Imageflow.Fluent.FinishJobBuilder
  id: FinishJobBuilder
  parent: Imageflow.Fluent
  children:
  - Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync
  - Imageflow.Fluent.FinishJobBuilder.InProcessAsync
  - Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync(System.String,System.Nullable{System.Int64})
  - Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout(System.Int32)
  - Imageflow.Fluent.FinishJobBuilder.SetCancellationToken(System.Threading.CancellationToken)
  - Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions(Imageflow.Fluent.SecurityOptions)
  - Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout(System.Int32)
  - Imageflow.Fluent.FinishJobBuilder.WithCancellationToken(System.Threading.CancellationToken)
  - Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions(Imageflow.Fluent.SecurityOptions)
  - Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs(System.Boolean)
  langs:
  - csharp
  - vb
  name: FinishJobBuilder
  nameWithType: FinishJobBuilder
  fullName: Imageflow.Fluent.FinishJobBuilder
  type: Class
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: FinishJobBuilder
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 8
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nAllows job execution in a fluent way\n"
  example: []
  syntax:
    content: public class FinishJobBuilder
    content.vb: Public Class FinishJobBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions(Imageflow.Fluent.SecurityOptions)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions(Imageflow.Fluent.SecurityOptions)
  id: WithSecurityOptions(Imageflow.Fluent.SecurityOptions)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: WithSecurityOptions(SecurityOptions)
  nameWithType: FinishJobBuilder.WithSecurityOptions(SecurityOptions)
  fullName: Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions(Imageflow.Fluent.SecurityOptions)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: WithSecurityOptions
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 21
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public FinishJobBuilder WithSecurityOptions(SecurityOptions securityOptions)
    parameters:
    - id: securityOptions
      type: Imageflow.Fluent.SecurityOptions
    return:
      type: Imageflow.Fluent.FinishJobBuilder
    content.vb: Public Function WithSecurityOptions(securityOptions As SecurityOptions) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions(Imageflow.Fluent.SecurityOptions)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions(Imageflow.Fluent.SecurityOptions)
  id: SetSecurityOptions(Imageflow.Fluent.SecurityOptions)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: SetSecurityOptions(SecurityOptions)
  nameWithType: FinishJobBuilder.SetSecurityOptions(SecurityOptions)
  fullName: Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions(Imageflow.Fluent.SecurityOptions)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetSecurityOptions
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 26
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public FinishJobBuilder SetSecurityOptions(SecurityOptions securityOptions)
    parameters:
    - id: securityOptions
      type: Imageflow.Fluent.SecurityOptions
    return:
      type: Imageflow.Fluent.FinishJobBuilder
    content.vb: Public Function SetSecurityOptions(securityOptions As SecurityOptions) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.WithCancellationToken(System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.WithCancellationToken(System.Threading.CancellationToken)
  id: WithCancellationToken(System.Threading.CancellationToken)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: WithCancellationToken(CancellationToken)
  nameWithType: FinishJobBuilder.WithCancellationToken(CancellationToken)
  fullName: Imageflow.Fluent.FinishJobBuilder.WithCancellationToken(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: WithCancellationToken
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 37
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReplaces the cancellation token\n"
  example: []
  syntax:
    content: public FinishJobBuilder WithCancellationToken(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: Imageflow.Fluent.FinishJobBuilder
      description: ''
    content.vb: Public Function WithCancellationToken(token As CancellationToken) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.WithCancellationToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.SetCancellationToken(System.Threading.CancellationToken)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.SetCancellationToken(System.Threading.CancellationToken)
  id: SetCancellationToken(System.Threading.CancellationToken)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: SetCancellationToken(CancellationToken)
  nameWithType: FinishJobBuilder.SetCancellationToken(CancellationToken)
  fullName: Imageflow.Fluent.FinishJobBuilder.SetCancellationToken(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetCancellationToken
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 47
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReplaces the cancellation token\n"
  example: []
  syntax:
    content: public FinishJobBuilder SetCancellationToken(CancellationToken token)
    parameters:
    - id: token
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: Imageflow.Fluent.FinishJobBuilder
      description: ''
    content.vb: Public Function SetCancellationToken(token As CancellationToken) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.SetCancellationToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout(System.Int32)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout(System.Int32)
  id: WithCancellationTimeout(System.Int32)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: WithCancellationTimeout(Int32)
  nameWithType: FinishJobBuilder.WithCancellationTimeout(Int32)
  fullName: Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout(System.Int32)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: WithCancellationTimeout
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 58
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReplaces the CancellationToken with a timeout\n"
  example: []
  syntax:
    content: public FinishJobBuilder WithCancellationTimeout(int milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int32
      description: ''
    return:
      type: Imageflow.Fluent.FinishJobBuilder
      description: ''
    content.vb: Public Function WithCancellationTimeout(milliseconds As Integer) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout(System.Int32)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout(System.Int32)
  id: SetCancellationTimeout(System.Int32)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: SetCancellationTimeout(Int32)
  nameWithType: FinishJobBuilder.SetCancellationTimeout(Int32)
  fullName: Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout(System.Int32)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: SetCancellationTimeout
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 68
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReplaces the CancellationToken with a timeout\n"
  example: []
  syntax:
    content: public FinishJobBuilder SetCancellationTimeout(int milliseconds)
    parameters:
    - id: milliseconds
      type: System.Int32
      description: ''
    return:
      type: Imageflow.Fluent.FinishJobBuilder
      description: ''
    content.vb: Public Function SetCancellationTimeout(milliseconds As Integer) As FinishJobBuilder
  overload: Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.InProcessAsync
  commentId: M:Imageflow.Fluent.FinishJobBuilder.InProcessAsync
  id: InProcessAsync
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: InProcessAsync()
  nameWithType: FinishJobBuilder.InProcessAsync()
  fullName: Imageflow.Fluent.FinishJobBuilder.InProcessAsync()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: InProcessAsync
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 74
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public Task<BuildJobResult> InProcessAsync()
    return:
      type: System.Threading.Tasks.Task{Imageflow.Fluent.BuildJobResult}
    content.vb: Public Function InProcessAsync As Task(Of BuildJobResult)
  overload: Imageflow.Fluent.FinishJobBuilder.InProcessAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync(System.String,System.Nullable{System.Int64})
  commentId: M:Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync(System.String,System.Nullable{System.Int64})
  id: InSubprocessAsync(System.String,System.Nullable{System.Int64})
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: InSubprocessAsync(String, Nullable<Int64>)
  nameWithType: FinishJobBuilder.InSubprocessAsync(String, Nullable<Int64>)
  fullName: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync(System.String, System.Nullable<System.Int64>)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: InSubprocessAsync
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 76
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public Task<BuildJobResult> InSubprocessAsync(string imageflowToolPath = null, long? outputBufferCapacity = default(long? ))
    parameters:
    - id: imageflowToolPath
      type: System.String
    - id: outputBufferCapacity
      type: System.Nullable{System.Int64}
    return:
      type: System.Threading.Tasks.Task{Imageflow.Fluent.BuildJobResult}
    content.vb: Public Function InSubprocessAsync(imageflowToolPath As String = Nothing, outputBufferCapacity As Long? = Nothing) As Task(Of BuildJobResult)
  overload: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync*
  nameWithType.vb: FinishJobBuilder.InSubprocessAsync(String, Nullable(Of Int64))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync(System.String, System.Nullable(Of System.Int64))
  name.vb: InSubprocessAsync(String, Nullable(Of Int64))
- uid: Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs(System.Boolean)
  commentId: M:Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs(System.Boolean)
  id: WriteJsonJobAndInputs(System.Boolean)
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: WriteJsonJobAndInputs(Boolean)
  nameWithType: FinishJobBuilder.WriteJsonJobAndInputs(Boolean)
  fullName: Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs(System.Boolean)
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: WriteJsonJobAndInputs
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 84
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  summary: "\nReturns a prepared job that can be executed with `imageflow_tool --json [job.JsonPath]`. Supporting input/output files are also created.\nIf deleteFilesOnDispose is true, then the files will be deleted when the job is disposed. \n"
  example: []
  syntax:
    content: public Task<IPreparedFilesystemJob> WriteJsonJobAndInputs(bool deleteFilesOnDispose)
    parameters:
    - id: deleteFilesOnDispose
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{Imageflow.Fluent.IPreparedFilesystemJob}
      description: ''
    content.vb: Public Function WriteJsonJobAndInputs(deleteFilesOnDispose As Boolean) As Task(Of IPreparedFilesystemJob)
  overload: Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync
  commentId: M:Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync
  id: InProcessAndDisposeAsync
  parent: Imageflow.Fluent.FinishJobBuilder
  langs:
  - csharp
  - vb
  name: InProcessAndDisposeAsync()
  nameWithType: FinishJobBuilder.InProcessAndDisposeAsync()
  fullName: Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync()
  type: Method
  source:
    remote:
      path: src/Imageflow/Fluent/FinishJobBuilder.cs
      branch: 3a3a03881f960b7ded94c07adbe3ebdf25495d2a
      repo: https://github.com/anshulrgoyal/imageflow-dotnet
    id: InProcessAndDisposeAsync
    path: src/Imageflow/Fluent/FinishJobBuilder.cs
    startLine: 87
  assemblies:
  - Imageflow.Net
  namespace: Imageflow.Fluent
  syntax:
    content: public Task<BuildJobResult> InProcessAndDisposeAsync()
    return:
      type: System.Threading.Tasks.Task{Imageflow.Fluent.BuildJobResult}
    content.vb: Public Function InProcessAndDisposeAsync As Task(Of BuildJobResult)
  overload: Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Imageflow.Fluent
  commentId: N:Imageflow.Fluent
  name: Imageflow.Fluent
  nameWithType: Imageflow.Fluent
  fullName: Imageflow.Fluent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions
  name: WithSecurityOptions
  nameWithType: FinishJobBuilder.WithSecurityOptions
  fullName: Imageflow.Fluent.FinishJobBuilder.WithSecurityOptions
- uid: Imageflow.Fluent.SecurityOptions
  commentId: T:Imageflow.Fluent.SecurityOptions
  parent: Imageflow.Fluent
  name: SecurityOptions
  nameWithType: SecurityOptions
  fullName: Imageflow.Fluent.SecurityOptions
- uid: Imageflow.Fluent.FinishJobBuilder
  commentId: T:Imageflow.Fluent.FinishJobBuilder
  parent: Imageflow.Fluent
  name: FinishJobBuilder
  nameWithType: FinishJobBuilder
  fullName: Imageflow.Fluent.FinishJobBuilder
- uid: Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions
  name: SetSecurityOptions
  nameWithType: FinishJobBuilder.SetSecurityOptions
  fullName: Imageflow.Fluent.FinishJobBuilder.SetSecurityOptions
- uid: Imageflow.Fluent.FinishJobBuilder.WithCancellationToken*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.WithCancellationToken
  name: WithCancellationToken
  nameWithType: FinishJobBuilder.WithCancellationToken
  fullName: Imageflow.Fluent.FinishJobBuilder.WithCancellationToken
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: Imageflow.Fluent.FinishJobBuilder.SetCancellationToken*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.SetCancellationToken
  name: SetCancellationToken
  nameWithType: FinishJobBuilder.SetCancellationToken
  fullName: Imageflow.Fluent.FinishJobBuilder.SetCancellationToken
- uid: Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout
  name: WithCancellationTimeout
  nameWithType: FinishJobBuilder.WithCancellationTimeout
  fullName: Imageflow.Fluent.FinishJobBuilder.WithCancellationTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout
  name: SetCancellationTimeout
  nameWithType: FinishJobBuilder.SetCancellationTimeout
  fullName: Imageflow.Fluent.FinishJobBuilder.SetCancellationTimeout
- uid: Imageflow.Fluent.FinishJobBuilder.InProcessAsync*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.InProcessAsync
  name: InProcessAsync
  nameWithType: FinishJobBuilder.InProcessAsync
  fullName: Imageflow.Fluent.FinishJobBuilder.InProcessAsync
- uid: System.Threading.Tasks.Task{Imageflow.Fluent.BuildJobResult}
  commentId: T:System.Threading.Tasks.Task{Imageflow.Fluent.BuildJobResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BuildJobResult>
  nameWithType: Task<BuildJobResult>
  fullName: System.Threading.Tasks.Task<Imageflow.Fluent.BuildJobResult>
  nameWithType.vb: Task(Of BuildJobResult)
  fullName.vb: System.Threading.Tasks.Task(Of Imageflow.Fluent.BuildJobResult)
  name.vb: Task(Of BuildJobResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.BuildJobResult
    name: BuildJobResult
    nameWithType: BuildJobResult
    fullName: Imageflow.Fluent.BuildJobResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.BuildJobResult
    name: BuildJobResult
    nameWithType: BuildJobResult
    fullName: Imageflow.Fluent.BuildJobResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync
  name: InSubprocessAsync
  nameWithType: FinishJobBuilder.InSubprocessAsync
  fullName: Imageflow.Fluent.FinishJobBuilder.InSubprocessAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Nullable{System.Int64}
  commentId: T:System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  nameWithType: Nullable<Int64>
  fullName: System.Nullable<System.Int64>
  nameWithType.vb: Nullable(Of Int64)
  fullName.vb: System.Nullable(Of System.Int64)
  name.vb: Nullable(Of Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs
  name: WriteJsonJobAndInputs
  nameWithType: FinishJobBuilder.WriteJsonJobAndInputs
  fullName: Imageflow.Fluent.FinishJobBuilder.WriteJsonJobAndInputs
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{Imageflow.Fluent.IPreparedFilesystemJob}
  commentId: T:System.Threading.Tasks.Task{Imageflow.Fluent.IPreparedFilesystemJob}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<IPreparedFilesystemJob>
  nameWithType: Task<IPreparedFilesystemJob>
  fullName: System.Threading.Tasks.Task<Imageflow.Fluent.IPreparedFilesystemJob>
  nameWithType.vb: Task(Of IPreparedFilesystemJob)
  fullName.vb: System.Threading.Tasks.Task(Of Imageflow.Fluent.IPreparedFilesystemJob)
  name.vb: Task(Of IPreparedFilesystemJob)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Imageflow.Fluent.IPreparedFilesystemJob
    name: IPreparedFilesystemJob
    nameWithType: IPreparedFilesystemJob
    fullName: Imageflow.Fluent.IPreparedFilesystemJob
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Imageflow.Fluent.IPreparedFilesystemJob
    name: IPreparedFilesystemJob
    nameWithType: IPreparedFilesystemJob
    fullName: Imageflow.Fluent.IPreparedFilesystemJob
  - name: )
    nameWithType: )
    fullName: )
- uid: Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync*
  commentId: Overload:Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync
  name: InProcessAndDisposeAsync
  nameWithType: FinishJobBuilder.InProcessAndDisposeAsync
  fullName: Imageflow.Fluent.FinishJobBuilder.InProcessAndDisposeAsync
